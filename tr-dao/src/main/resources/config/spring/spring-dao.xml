<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd"
	default-lazy-init="true">

	<description>Spring Configuration</description>
<!-- 	<bean id="dataSourceSpied" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> 
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
   		<constructor-arg ref="dataSourceSpied"></constructor-arg>
    </bean>
-->
<!--      <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
     	<property name="jndiName" value="${jndiName}"></property>
    </bean> -->
  
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
	        <!-- 基本属性 url、user、password -->
	        <property name="url" value="${jdbc.url}"/>
	        <property name="username" value="${jdbc.username}"/>
	        <property name="password" value="${jdbc.password}"/>
	
	        <!-- 配置初始化大小、最小、最大 -->
	        <property name="initialSize" value="${druid.initialSize}"/>
	        <property name="minIdle" value="${druid.minIdle}"/>
	        <property name="maxActive" value="${druid.maxActive}"/>
	
	        <!-- 配置获取连接等待超时的时间 -->
	        <property name="maxWait" value="${druid.maxWait}"/>
	        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
	
	        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
	
	        <property name="validationQuery" value="${druid.validationQuery}" />
	        <property name="testWhileIdle" value="${druid.testWhileIdle}" />
	        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
	        <property name="testOnReturn" value="${druid.testOnReturn}" />
	
	        <!-- 打开PSCache，并且指定每个连接上PSCache的大小  如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。-->
	        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
	        <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
	
	        <!-- 配置监控统计拦截的filters -->
	        <property name="filters" value="${druid.filters}" />
	</bean>
   
	<!-- spring jdbc -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
         <constructor-arg ref="dataSource"></constructor-arg>
     </bean>
     
	<!-- 事务控制 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!--  orm  分页 -->
	<bean name="pageSqlHelper" class="com.tmser.tr.common.page.MysqlPageSqlHelper"></bean>
	
	<!--  orm  sql 映射 -->
	<bean name="sqlMapping" class="com.tmser.tr.common.orm.DefaultSqlMapping"></bean>
	
	<!--orm bo 映射扫描  -->
	<bean class="com.tmser.tr.common.orm.MapperScannerConfig">
		<property name="basePackage" value="com/tmser/tr/**/bo" />
	</bean>
	
	<bean id="msgThreadPool"  
        class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
        <property name="corePoolSize" value="5" /><!--最小线程数 -->  
        <property name="maxPoolSize" value="10" /><!--最大线程数 -->  
        <property name="queueCapacity" value="50" /><!--缓冲队列大小 -->  
        <property name="threadNamePrefix" value="msg-" /><!--线程池中产生的线程名字前缀 -->  
        <property name="keepAliveSeconds" value="30" /><!--线程池中空闲线程的存活时间单位秒 -->  
    </bean>
    
    <bean id="phaseMetaProvider" class="com.tmser.tr.manage.meta.DefaultMetaProvider.DefaultPhaseMetaProvider"></bean>
    <bean id="phaseSubjectMetaProvider" class="com.tmser.tr.manage.meta.DefaultMetaProvider.DefaultPhaseSubjectMetaProvider"></bean>
    <bean id="phaseGradeMetaProvider" class="com.tmser.tr.manage.meta.DefaultMetaProvider.DefaultPhaseGradeMetaProvider"></bean>
    <bean id="orgTypeMetaProvider" class="com.tmser.tr.manage.meta.DefaultMetaProvider.DefaultOrgTypeMetaProvider"></bean>
    <bean id="publisherMetaProvider" class="com.tmser.tr.manage.meta.DefaultMetaProvider.DefaultPublisherMetaProvider"></bean>
    
    <!-- 获取bean工具注入 -->
	<bean id="springContextHolder" class="com.tmser.tr.utils.SpringContextHolder" lazy-init="false"/>
	
	<!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:messages/messages</value>
                <value>classpath:messages/app</value>
                <value>classpath:messages/validationMessages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

	<bean id="jyMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">  
        <property name="protocol" value="smtp" />  
        <property name="host" value="${mail_host}" />  
        <property name="port" value="${mail_port}"/>  
        <property name="username" value="${mail_username}" />  
        <property name="password" value="${mail_password}" />
          
        <property name="javaMailProperties">  
            <props>  
                <prop key="mail.smtp.auth">true</prop>  
                <!-- 如果是网易邮箱， mail.smtp.starttls.enable 设置为 false-->  
                <prop key="mail.smtp.starttls.enable">false</prop>  
                <!-- <prop key="mail.debug">true</prop> -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>  
            </props>  
        </property>  
    </bean>
    
</beans>
	